{"version":3,"file":"static/js/380.682a6cd3.chunk.js","mappings":"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","sources":["shared/components/Modal.js","features/components/store/Counter.js","features/components/context/Counter.js","features/pages/Recursion.js","features/pages/Timer.js","features/pages/Toggle.js","features/pages/Timeout.js","features/pages/FormData.js","features/components/recoil/counterState.js","features/components/recoil/incrementByState.js","features/components/recoil/CounterButton.js","features/components/mobx/CounterMobx.js","features/components/mobx/Counter.js","shared/pages/Features.js"],"sourcesContent":["import React from 'react';\n\nconst Modal = (props) => {\n    return (\n        <div className=\"center\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Modal;\n","import React, { useRef } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { decrement, increment, incrementByAmount } from \"./counterSlice\";\n\nconst Counter = () => {\n\n    const count = useSelector((state) => state.counter.value)\n    const dispatch = useDispatch()\n\n    const amount = useRef();\n\n    return (\n        <>\n            <h2>State Management Using Redux:</h2>\n            <Button className=\"btn-padding\" variant=\"success\" onClick={() => dispatch(increment())}>+</Button>\n\n            <span>{count}</span>\n\n            <Button className=\"btn-padding\" variant=\"danger\" onClick={() => dispatch(decrement())}>-</Button>\n\n            <Form.Control type=\"number\" ref={amount} placeholder=\"Enter amount\" />\n\n            <Button className=\"btn-margin-top\" variant=\"primary\" onClick={() => dispatch(incrementByAmount(amount.current.value))}>Add Amount</Button>\n        </>\n    );\n};\n\nexport default Counter;","\nimport React, { useContext, useRef } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport CounterContext from \"./counter-context\";\n\nconst Counter = () => {\n\n    const userCtx = useContext(CounterContext);\n\n    const amount = useRef();\n\n    return (\n        <>\n            <h2>State Management with Context</h2>\n            <Button className=\"btn-padding\" variant=\"success\" onClick={() => userCtx.increment()}>+</Button>\n\n            <span>{userCtx.counter}</span>\n\n            <Button className=\"btn-padding\" variant=\"danger\" onClick={() => userCtx.decrement()}>-</Button>\n\n            <Form.Control type=\"number\" ref={amount} placeholder=\"Enter amount\" />\n            <Button className=\"btn-margin-top\" variant=\"primary\" onClick={() => userCtx.incrementByAmount(amount.current.value)}>Add Amount</Button>\n        </>\n    );\n};\n\nexport default Counter;","import React from 'react';\n\nconst Recursion = () => {\n    const myObject = {\n        \"a\": 1,\n        \"b\": [2, 3],\n        \"age\": 10,\n        ol: {\n            a: 5,\n            age: 20\n        },\n        \"d\": { \"age\": 30 }\n    };\n\n    let total = 0;\n    const calculateAge = (myObj, sum) => {\n\n        for (let obj in myObj) {\n            if (obj === 'age') {\n                total += myObj['age'];\n            }\n\n            if (typeof myObj[obj] == 'object' && myObj[obj] != null) {\n                calculateAge(myObj[obj], sum);\n            }\n        }\n    }\n\n    calculateAge(myObject, 0);\n\n    return (\n        <>\n            <h2>Recurssive Function: Nested Age Total = {total}</h2>\n            <pre>{JSON.stringify(myObject, null, 2)}</pre>\n        </>\n    );\n}\n\nexport default Recursion;","import React, { useEffect, useState } from \"react\";\n\nconst Timer = () => {\n\n    const [timer, setTimer] = useState();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const date = new Date();\n            const strDate = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} \n            ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n            setTimer(strDate);\n        }, 1000);\n\n        setTimeout(() => {\n            clearInterval(interval);\n        }, 1000000);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, []);\n\n    return (\n        <h2>Timer: {timer}</h2>\n    );\n}\n\nexport default Timer;","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Toggle = () => {\n    const [change, setChange] = useState(false);\n    const handleChange = () => {\n        setChange(!change);\n    }\n    return (\n        <>\n            <p>Toggle Text:</p>\n            {!change && <p>Hello World.</p>}\n            {change && <p>Welcome.</p>}\n            <Button onClick={handleChange}>Changed!</Button>\n        </>\n    )\n}\n\nexport default Toggle;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Timeout = () => {\n    const [textClass, setTextClass] = useState('black');\n    const [buttonClass, setButtonClass] = useState('show')\n\n    const hideButton = () => setTimeout(() => {\n        setButtonClass('hide');\n    }, 1000);\n\n    const showButton = () => setTimeout(() => {\n        setButtonClass('show');\n        setTextClass('black');\n    }, 3000);\n\n    const handleClick = () => {\n        setTextClass('red');\n        hideButton();\n        showButton();\n    }\n\n    return (\n        <>\n            <p className={textClass}>\n                When you click on button, < br />\n                text turns red, < br />\n                after 1 sec, button disappears, < br />\n                after 3 seconds button reappaears and text turns black again\n            </p>\n\n            <Button className={buttonClass} onClick={handleClick}>Click!</Button>\n        </>\n    )\n}\n\nexport default Timeout;\n","import React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport env from \"react-dotenv\";\n\nconst FormData = () => {\n    const todoRef = useRef();\n    const [changed, setChanged] = useState(true);\n    const [todos, setTodos] = useState([]);\n    \n    useEffect(() => {\n\n        const fetchData = async () => {\n            const response = await fetch( `${env.NODE_API}api/todos` );\n            const responseData = await response.json();            \n            setTodos(responseData.todos);\n        }\n\n        fetchData();\n    }, [changed]);\n\n    const handleSave = async event => {\n        event.preventDefault();        \n        \n        if (todoRef.current.value.trim().length === 0) {\n            return false;\n        }\n\n        try {\n            const url = env.NODE_API;\n            const response = await fetch(\n                `${url}api/todo`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify(\n                        {\n                            name: todoRef.current.value,\n                        }\n                    ),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }                    \n                }\n            );\n\n            const responseData = await response.json();\n            \n            if (!response.ok) {\n                throw new Error(responseData.message);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n\n        todoRef.current.value = '';\n        setChanged( prev => !prev);\n    }\n\n    return (\n        <>\n            <p>Todo: </p>\n            <input type='text' id='name' name='name' ref={todoRef} />\n            &nbsp;&nbsp;\n            <Button onClick={handleSave}>Save</Button>\n            <p>List Todo</p>\n            <ul>\n                {todos.map( todo => {\n                    return <li key={todo.id}>{todo.name}</li>\n                })}\n            </ul>\n        </>\n    );\n}\n\nexport default FormData;\n","import React from 'react';\nimport { atom } from \"recoil\";\n\nexport const counterState = atom({\n    key: 'counterState',\n    default: 0\n});","import React from 'react';\nimport { atom } from \"recoil\";\n\nexport const incrementByState = atom({\n    key: 'incrementByState',\n    default: 1\n});","import React from 'react';\nimport { Form, Button } from \"react-bootstrap\"\nimport { useRecoilState } from \"recoil\";\nimport { counterState } from \"./counterState\";\nimport { incrementByState } from \"./incrementByState\";\n\nexport const CounterButton = () => {\n    const [numberOfClicks, setNumberOfClicks] = useRecoilState(counterState);\n    const [incrementBy, setIncrementBy] = useRecoilState(incrementByState);\n\n    return (\n        <>\n            <h2>State Management with Recoil</h2>\n            <p>You have clicked button {numberOfClicks} times.</p>\n            <Form.Control value={incrementBy} onChange={e => setIncrementBy(Number(e.target.value))} type=\"number\" placeholder=\"Enter number\" />\n            < br />\n            <Button onClick={() => setNumberOfClicks(numberOfClicks + incrementBy)}>Set By Number</Button>\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { observer } from 'mobx-react-lite';\n\nexport const CounterMobx = observer(({ counter }) => {\n    const [incrementBy, setIncrementBy] = useState(1);\n\n    return (\n        <>\n            <h2>State Management with Mobx</h2>\n            <p>You have clicked button {counter.numberOfClicks} times.</p>\n            <Form.Control value={incrementBy} onChange={e => setIncrementBy(Number(e.target.value))} type=\"number\" placeholder=\"Enter number\" />\n            < br />\n            <Button onClick={() => counter.increment(incrementBy)}>Set By Number</Button>\n        </>\n    )\n});","import React from 'react';\nimport { makeObservable, observable, action } from 'mobx';\n\nexport class Counter {\n    numberOfClicks = 0;\n\n    constructor() {\n        makeObservable(this, {\n            numberOfClicks: observable,\n            increment: action\n        });\n    }\n\n    increment = amount => {\n        this.numberOfClicks += amount;\n    }\n}","import React from 'react';\nimport Redux from \"../../features/components/store/Counter\";\nimport Context from \"../../features/components/context/Counter\";\nimport Recursion from \"../../features/pages/Recursion\";\nimport Timer from \"../../features/pages/Timer\";\nimport Modal from \"../components/Modal\";\nimport Toggle from \"../../features/pages/Toggle\";\nimport Timeout from \"../../features/pages/Timeout\";\nimport FormData from '../../features/pages/FormData';\nimport { CounterButton } from \"../../features/components/recoil/CounterButton\";\nimport { CounterMobx } from \"../../features/components/mobx/CounterMobx\";\nimport { Counter } from \"../../features/components/mobx/Counter\";\n\nconst counter = new Counter();\n\nconst Features = () => {\n    return (\n        <Modal>\n            <Timer />\n            <hr />\n            <Redux />\n            <hr />\n            <Context />\n            <hr />\n            <CounterButton />\n            <hr />\n            <CounterMobx counter={counter} />\n            <hr />\n            <Recursion />\n            <hr />\n            <Toggle />\n            <hr />\n            <Timeout />\n            <hr />\n            <FormData />\n        </Modal>\n    )\n}\n\nexport default Features;"],"names":["props","_jsx","className","children","count","useSelector","state","counter","value","dispatch","useDispatch","amount","useRef","_jsxs","_Fragment","Button","variant","onClick","increment","decrement","Form","type","ref","placeholder","incrementByAmount","current","userCtx","useContext","CounterContext","myObject","ol","a","age","total","calculateAge","myObj","sum","obj","JSON","stringify","_useState","useState","_useState2","_slicedToArray","timer","setTimer","useEffect","interval","setInterval","date","Date","strDate","concat","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","setTimeout","clearInterval","change","setChange","textClass","setTextClass","_useState3","_useState4","buttonClass","setButtonClass","todoRef","changed","setChanged","todos","setTodos","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","responseData","_context","prev","next","fetch","env","sent","json","stop","apply","arguments","handleSave","_ref2","_callee2","event","url","_context2","preventDefault","trim","length","abrupt","method","body","name","headers","ok","Error","message","t0","console","log","_x","id","map","todo","counterState","atom","key","default","incrementByState","CounterButton","_useRecoilState","useRecoilState","_useRecoilState2","numberOfClicks","setNumberOfClicks","_useRecoilState3","_useRecoilState4","incrementBy","setIncrementBy","onChange","e","Number","target","CounterMobx","observer","Counter","_createClass","_this","_classCallCheck","makeObservable","this","observable","action","Modal","Timer","Redux","Context","Recursion","Toggle","Timeout","FormData"],"sourceRoot":""}